program =>
compoundstmt =>
{ stmts } =>
{ stmt stmts } =>
{ stmt } =>
{ ifstmt } =>
{ if ( boolexpr ) then stmt else stmt } =>
{ if ( boolexpr ) then stmt else assgstmt } =>
{ if ( boolexpr ) then stmt else ID = arithexpr ; } =>
{ if ( boolexpr ) then stmt else ID = multexpr arithexprprime ; } =>
{ if ( boolexpr ) then stmt else ID = multexpr ; } =>
{ if ( boolexpr ) then stmt else ID = simpleexpr multexprprime ; } =>
{ if ( boolexpr ) then stmt else ID = simpleexpr * simpleexpr multexprprime ; } =>
{ if ( boolexpr ) then stmt else ID = simpleexpr * simpleexpr ; } =>
{ if ( boolexpr ) then stmt else ID = simpleexpr * NUM ; } =>
{ if ( boolexpr ) then stmt else ID = ID * NUM ; } =>
{ if ( boolexpr ) then assgstmt else ID = ID * NUM ; } =>
{ if ( boolexpr ) then ID = arithexpr ; else ID = ID * NUM ; } =>
{ if ( boolexpr ) then ID = multexpr arithexprprime ; else ID = ID * NUM ; } =>
{ if ( boolexpr ) then ID = multexpr ; else ID = ID * NUM ; } =>
{ if ( boolexpr ) then ID = simpleexpr multexprprime ; else ID = ID * NUM ; } =>
{ if ( boolexpr ) then ID = simpleexpr ; else ID = ID * NUM ; } =>
{ if ( boolexpr ) then ID = NUM ; else ID = ID * NUM ; } =>
{ if ( arithexpr boolop arithexpr ) then ID = NUM ; else ID = ID * NUM ; } =>
{ if ( arithexpr boolop multexpr arithexprprime ) then ID = NUM ; else ID = ID * NUM ; } =>
{ if ( arithexpr boolop multexpr ) then ID = NUM ; else ID = ID * NUM ; } =>
{ if ( arithexpr boolop simpleexpr multexprprime ) then ID = NUM ; else ID = ID * NUM ; } =>
{ if ( arithexpr boolop simpleexpr ) then ID = NUM ; else ID = ID * NUM ; } =>
{ if ( arithexpr boolop ID ) then ID = NUM ; else ID = ID * NUM ; } =>
{ if ( arithexpr == ID ) then ID = NUM ; else ID = ID * NUM ; } =>
{ if ( multexpr arithexprprime == ID ) then ID = NUM ; else ID = ID * NUM ; } =>
{ if ( multexpr == ID ) then ID = NUM ; else ID = ID * NUM ; } =>
{ if ( simpleexpr multexprprime == ID ) then ID = NUM ; else ID = ID * NUM ; } =>
{ if ( simpleexpr == ID ) then ID = NUM ; else ID = ID * NUM ; } =>
{ if ( ID == ID ) then ID = NUM ; else ID = ID * NUM ; }